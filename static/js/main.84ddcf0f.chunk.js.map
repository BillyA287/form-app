{"version":3,"sources":["components/UserDetails/user.details-component.jsx","components/Personal/personal-component.jsx","components/Confirm/confirm-component.jsx","components/Success/success-component.jsx","components/Form/form-component.jsx","App.js","serviceWorker.js","index.js"],"names":["UserDetails","continue","event","preventDefault","props","nextStep","this","values","handleChange","Dialog","open","fullWidth","maxWidth","AppBar","title","TextField","placeholder","label","onChange","defaultValue","firstName","margin","lastName","email","Button","color","variant","onClick","React","Component","PersonalDetails","back","previousStep","id","occupation","city","bio","Confirm","List","ListItem","ListItemText","data-test","primary","secondary","Success","Form","state","step","age","setState","input","target","value","theme","createMuiTheme","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wRAgEeA,EAzDf,4MAEEC,SAAW,SAACC,GACVA,EAAMC,iBACN,EAAKC,MAAMC,YAJf,uDAOY,IAAD,EAC0BC,KAAKF,MAA9BG,EADD,EACCA,OAAQC,EADT,EACSA,aAEhB,OAEI,mCACE,eAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,WAAS,EAACC,SAAS,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,uBACd,cAACC,EAAA,EAAD,CACEC,YAAY,wBACZC,MAAM,aACNC,SAAUV,EAAa,aACvBW,aAAcZ,EAAOa,UACrBC,OAAO,SACPV,WAAS,IAEX,uBACA,cAACI,EAAA,EAAD,CACEC,YAAY,uBACZC,MAAM,YACNC,SAAUV,EAAa,YACvBW,aAAcZ,EAAOe,SACrBD,OAAO,SACPV,WAAS,IAEX,uBACA,cAACI,EAAA,EAAD,CACEC,YAAY,mBACZC,MAAM,QACNC,SAAUV,EAAa,SACvBW,aAAcZ,EAAOgB,MACrBF,OAAO,SACPV,WAAS,IAEX,uBACA,cAACa,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYC,QAASrB,KAAKL,SAA1D,+BA1CZ,GAAiC2B,IAAMC,WC8DxBC,EA9Df,4MACE7B,SAAW,SAACC,GACVA,EAAMC,iBACN,EAAKC,MAAMC,YAHf,EAME0B,KAAO,SAAC7B,GACNA,EAAMC,iBACN,EAAKC,MAAM4B,gBARf,uDAWY,IAAD,EAC0B1B,KAAKF,MAA9BG,EADD,EACCA,OAAQC,EADT,EACSA,aAEhB,OACE,mCACE,eAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,WAAS,EAACC,SAAS,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,2BACd,cAACC,EAAA,EAAD,CACEkB,GAAG,QACHjB,YAAY,wBACZC,MAAM,aACNC,SAAUV,EAAa,cACvBW,aAAcZ,EAAO2B,WACrBb,OAAO,SACPV,WAAS,IAEX,uBACA,cAACI,EAAA,EAAD,CAEEC,YAAY,kBACZC,MAAM,OACNC,SAAUV,EAAa,QACvBW,aAAcZ,EAAO4B,KACrBd,OAAO,SACPV,WAAS,IAEX,uBACA,cAACI,EAAA,EAAD,CAEEC,YAAY,iBACZC,MAAM,MACNC,SAAUV,EAAa,OACvBW,aAAcZ,EAAO6B,IACrBf,OAAO,SACPV,WAAS,IAEX,uBAEA,cAACa,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAQ,YAAYC,QAASrB,KAAKyB,KAA5D,kBAIA,cAACP,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYC,QAASrB,KAAKL,SAA1D,+BArDV,GAAqC2B,IAAMC,W,2BC+E5BQ,EA/Ef,4MACEpC,SAAW,SAACC,GACVA,EAAMC,iBAEN,EAAKC,MAAMC,YAJf,EAOE0B,KAAO,SAAC7B,GACNA,EAAMC,iBACN,EAAKC,MAAM4B,gBATf,uDAWY,IAAD,EAGH1B,KAAKF,MADPG,OAAUa,EAFL,EAEKA,UAAWE,EAFhB,EAEgBA,SAAUC,EAF1B,EAE0BA,MAAOW,EAFjC,EAEiCA,WAAYC,EAF7C,EAE6CA,KAAMC,EAFnD,EAEmDA,IAG1D,OACE,mCACE,eAAC3B,EAAA,EAAD,CAAQC,MAAI,EAACC,WAAS,EAACC,SAAS,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,sBACd,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,YACVC,QAAQ,aACRC,UAAWvB,MAGf,cAACmB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,WACVC,QAAQ,YACRC,UAAWrB,MAGf,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,QACVC,QAAQ,QACRC,UAAWpB,MAGf,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,aACVC,QAAQ,aACRC,UAAWT,MAGf,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,OACVC,QAAQ,OACRC,UAAWR,MAGf,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAU,MACVC,QAAQ,MACRC,UAAWP,SAIjB,uBAEA,cAACZ,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAQ,YAAYC,QAASrB,KAAKyB,KAA5D,kBAIA,cAACP,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYC,QAASrB,KAAKL,SAA1D,yCAtEV,GAA6B2B,IAAMC,WCyBpBe,EA5Bf,4MACE3C,SAAW,SAACC,GACVA,EAAMC,iBAEN,EAAKC,MAAMC,YAJf,EAOE0B,KAAO,SAAC7B,GACNA,EAAMC,iBACN,EAAKC,MAAM4B,gBATf,uDAYI,OAEI,mCACE,eAACvB,EAAA,EAAD,CAAQC,MAAI,EAACC,WAAS,EAACC,SAAS,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,YACd,+DACA,0FAlBZ,GAA6Bc,IAAMC,WCEtBgB,EAAb,4MACEC,MAAQ,CACNC,KAAM,EACN3B,UAAW,GACXE,SAAU,GACVC,MAAO,GACPyB,IAAK,GACLd,WAAY,GACZC,KAAM,GACNC,IAAK,IATT,EAaE/B,SAAW,WAAO,IACR0C,EAAS,EAAKD,MAAdC,KACR,EAAKE,SAAS,CACZF,KAAMA,EAAO,KAhBnB,EAqBEf,aAAe,WAAO,IACZe,EAAS,EAAKD,MAAdC,KACR,EAAKE,SAAS,CACZF,KAAMA,EAAO,KAxBnB,EA6BEvC,aAAe,SAAA0C,GAAK,OAAI,SAAAhD,GAC1B,EAAK+C,SAAL,eAAgBC,EAAQhD,EAAMiD,OAAOC,UA9BrC,uDAiCY,IACCL,EAAQzC,KAAKwC,MAAbC,KADF,EAE4DzC,KAAKwC,MAChEvC,EAAS,CAACa,UAHX,EAEEA,UACoBE,SAHtB,EAEaA,SACmBC,MAHhC,EAEuBA,MACgByB,IAHvC,EAE8BA,IACcd,WAH5C,EAEmCA,WACqBC,KAHxD,EAE+CA,KACeC,IAH9D,EAEqDA,KAI1D,OAAOW,GACH,KAAK,EACD,OAAQ,cAAC,EAAD,CAAa1C,SAAUC,KAAKD,SAAUG,aAAcF,KAAKE,aAAcD,OAAQA,IAErF,KAAK,EACD,OAAQ,cAAC,EAAD,CAAiBF,SAAUC,KAAKD,SAAU2B,aAAc1B,KAAK0B,aAAcxB,aAAcF,KAAKE,aAAcD,OAAQA,IAChI,KAAK,EACD,OACE,cAAC,EAAD,CACEF,SAAUC,KAAKD,SACf2B,aAAc1B,KAAK0B,aAEnBzB,OAAQA,IAGhB,KAAK,EAAG,OAAQ,cAAC,EAAD,SAtDhC,GAA0BqB,IAAMC,WCA1BwB,EAAQC,cAYCC,MAVf,WACE,OACE,cAAC,WAAD,UACA,cAAC,IAAD,CAAkBF,MAAOA,EAAzB,SACE,cAAC,EAAD,SCAcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.84ddcf0f.chunk.js","sourcesContent":["import React from 'react'\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nexport class UserDetails extends React.Component {\n  \n  continue = (event) => {\n    event.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n     \n        <>\n          <Dialog open fullWidth maxWidth=\"sm\">\n            <AppBar title=\"Enter User Details\" />\n            <TextField\n              placeholder=\"Enter Your First Name\"\n              label=\"First Name\"\n              onChange={handleChange(\"firstName\")}\n              defaultValue={values.firstName}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Enter Your Last Name\"\n              label=\"Last Name\"\n              onChange={handleChange(\"lastName\")}\n              defaultValue={values.lastName}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Enter Your Email\"\n              label=\"Email\"\n              onChange={handleChange(\"email\")}\n              defaultValue={values.email}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <Button color=\"primary\" variant=\"contained\" onClick={this.continue}>\n              Continue\n            </Button>\n          </Dialog>\n        </>\n     \n    );\n  }\n}\n\n\n\n\n\n\nexport default UserDetails;\n\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nexport class PersonalDetails extends React.Component {\n  continue = (event) => {\n    event.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = (event) => {\n    event.preventDefault();\n    this.props.previousStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n      <>\n        <Dialog open fullWidth maxWidth=\"sm\">\n          <AppBar title=\"Enter Personal Details\" />\n          <TextField\n            id=\"input\"\n            placeholder=\"Enter Your Occupation\"\n            label=\"Occupation\"\n            onChange={handleChange(\"occupation\")}\n            defaultValue={values.occupation}\n            margin=\"normal\"\n            fullWidth\n          />\n          <br />\n          <TextField\n            \n            placeholder=\"Enter Your City\"\n            label=\"City\"\n            onChange={handleChange(\"city\")}\n            defaultValue={values.city}\n            margin=\"normal\"\n            fullWidth\n          />\n          <br />\n          <TextField\n            \n            placeholder=\"Enter Your Bio\"\n            label=\"Bio\"\n            onChange={handleChange(\"bio\")}\n            defaultValue={values.bio}\n            margin=\"normal\"\n            fullWidth\n          />\n          <br />\n\n          <Button color=\"secondary\" variant=\"contained\" onClick={this.back}>\n            Back\n          </Button>\n\n          <Button color=\"primary\" variant=\"contained\" onClick={this.continue}>\n            Continue\n          </Button>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default PersonalDetails;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\nimport Button from \"@material-ui/core/Button\";\n\n\nexport class Confirm extends React.Component {\n  continue = (event) => {\n    event.preventDefault();\n    // send form\n    this.props.nextStep();\n  };\n\n  back = (event) => {\n    event.preventDefault();\n    this.props.previousStep();\n  };\n  render() {\n    const {\n      values: { firstName, lastName, email, occupation, city, bio },\n    } = this.props;\n\n    return (\n      <>\n        <Dialog open fullWidth maxWidth=\"sm\">\n          <AppBar title=\"Confirm User Data\" />\n          <List>\n            <ListItem>\n              <ListItemText\n                data-test=\"firstName\"\n                primary=\"First Name\"\n                secondary={firstName}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                data-test=\"lastName\"\n                primary=\"Last Name\"\n                secondary={lastName}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                data-test=\"Email\"\n                primary=\"Email\"\n                secondary={email}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                data-test=\"Occupation\"\n                primary=\"Occupation\"\n                secondary={occupation}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                data-test=\"City\"\n                primary=\"City\"\n                secondary={city}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                data-test=\"Bio\"\n                primary=\"Bio\"\n                secondary={bio}\n              />\n            </ListItem>\n          </List>\n          <br />\n\n          <Button color=\"secondary\" variant=\"contained\" onClick={this.back}>\n            Back\n          </Button>\n\n          <Button color=\"primary\" variant=\"contained\" onClick={this.continue}>\n            Confirm & Continue\n          </Button>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default Confirm;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nexport class Success extends React.Component {\n  continue = (event) => {\n    event.preventDefault();\n    // send form\n    this.props.nextStep();\n  };\n\n  back = (event) => {\n    event.preventDefault();\n    this.props.previousStep();\n  };\n  render() {\n    return (\n     \n        <>\n          <Dialog open fullWidth maxWidth=\"sm\">\n            <AppBar title=\"Success\" />\n            <h1>Thank You For Your Submission</h1>\n            <p>You will get an email with further instructions.</p>\n          </Dialog>\n        </>\n      \n    );\n  }\n}\n\n\n\nexport default Success;\n","import React from \"react\";\nimport UserDetails from '../UserDetails/user.details-component'\nimport PersonalDetails from '../Personal/personal-component'\nimport Confirm from '../Confirm/confirm-component'\nimport Success from '../Success/success-component'\n\nexport class Form extends React.Component {\n  state = {\n    step: 1,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    age: \"\",\n    occupation: \"\",\n    city: \"\",\n    bio: \"\"\n  };\n\n  //next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1,\n    });\n  };\n\n  //previous step\n  previousStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n\n  //handle field change \n  handleChange = input => event =>{\nthis.setState({[input]: event.target.value});\n  }\n\n  render() {\n      const {step} = this.state;\n      const {firstName, lastName, email, age, occupation, city, bio} = this.state\n      const values = {firstName, lastName, email, age, occupation, city, bio}\n    \n\n      switch(step){\n          case 1:\n              return (<UserDetails nextStep={this.nextStep} handleChange={this.handleChange} values={values}/>\n                )\n                case 2:\n                    return (<PersonalDetails nextStep={this.nextStep} previousStep={this.previousStep} handleChange={this.handleChange} values={values} />)\n                case 3:\n                    return (\n                      <Confirm\n                        nextStep={this.nextStep}\n                        previousStep={this.previousStep}\n                        \n                        values={values}\n                      />\n                    );\n                case 4: return (<Success />)\n\n                default :\n              \n      }\n    \n      \n  }\n}\n\nexport default Form","import React from 'react';\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {Form} from './components/Form/form-component'\nimport {Fragment} from 'react'\n\nconst theme = createMuiTheme();\n\nfunction App() {\n  return (\n    <Fragment>\n    <MuiThemeProvider theme={theme}>\n      <Form />\n    </MuiThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}